<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fuermolv.book.dao.GradeMapper">
  <resultMap id="BaseResultMap" type="fuermolv.book.entity.Grade">
    <id column="gid" jdbcType="INTEGER" property="gid" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="gGrade" jdbcType="VARCHAR" property="ggrade" />
    <result column="pGrade" jdbcType="VARCHAR" property="pgrade" />
    <result column="fGrade" jdbcType="VARCHAR" property="fgrade" />
    <result column="gRate" jdbcType="VARCHAR" property="grate" />
    <result column="gType" jdbcType="VARCHAR" property="gtype" />
    <result column="gClass" jdbcType="VARCHAR" property="gclass" />
    <result column="gTeacher" jdbcType="VARCHAR" property="gteacher" />
    <result column="gStudentNum" jdbcType="VARCHAR" property="gstudentnum" />
    <result column="gRemark" jdbcType="VARCHAR" property="gremark" />
    <result column="gBeginTime" jdbcType="TIMESTAMP" property="gbegintime" />
    <result column="gEndTime" jdbcType="TIMESTAMP" property="gendtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    gid, cid, sid, gGrade, pGrade, fGrade, gRate, gType, gClass, gTeacher, gStudentNum, 
    gRemark, gBeginTime, gEndTime
  </sql>
  <select id="selectByExample" parameterType="fuermolv.book.entity.GradeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from grade
    where gid = #{gid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from grade
    where gid = #{gid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="fuermolv.book.entity.GradeExample">
    delete from grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="fuermolv.book.entity.Grade">
    insert into grade (gid, cid, sid, 
      gGrade, pGrade, fGrade, 
      gRate, gType, gClass, 
      gTeacher, gStudentNum, gRemark, 
      gBeginTime, gEndTime)
    values (#{gid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, 
      #{ggrade,jdbcType=VARCHAR}, #{pgrade,jdbcType=VARCHAR}, #{fgrade,jdbcType=VARCHAR}, 
      #{grate,jdbcType=VARCHAR}, #{gtype,jdbcType=VARCHAR}, #{gclass,jdbcType=VARCHAR}, 
      #{gteacher,jdbcType=VARCHAR}, #{gstudentnum,jdbcType=VARCHAR}, #{gremark,jdbcType=VARCHAR}, 
      #{gbegintime,jdbcType=TIMESTAMP}, #{gendtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="fuermolv.book.entity.Grade">
    insert into grade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        gid,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="ggrade != null">
        gGrade,
      </if>
      <if test="pgrade != null">
        pGrade,
      </if>
      <if test="fgrade != null">
        fGrade,
      </if>
      <if test="grate != null">
        gRate,
      </if>
      <if test="gtype != null">
        gType,
      </if>
      <if test="gclass != null">
        gClass,
      </if>
      <if test="gteacher != null">
        gTeacher,
      </if>
      <if test="gstudentnum != null">
        gStudentNum,
      </if>
      <if test="gremark != null">
        gRemark,
      </if>
      <if test="gbegintime != null">
        gBeginTime,
      </if>
      <if test="gendtime != null">
        gEndTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="ggrade != null">
        #{ggrade,jdbcType=VARCHAR},
      </if>
      <if test="pgrade != null">
        #{pgrade,jdbcType=VARCHAR},
      </if>
      <if test="fgrade != null">
        #{fgrade,jdbcType=VARCHAR},
      </if>
      <if test="grate != null">
        #{grate,jdbcType=VARCHAR},
      </if>
      <if test="gtype != null">
        #{gtype,jdbcType=VARCHAR},
      </if>
      <if test="gclass != null">
        #{gclass,jdbcType=VARCHAR},
      </if>
      <if test="gteacher != null">
        #{gteacher,jdbcType=VARCHAR},
      </if>
      <if test="gstudentnum != null">
        #{gstudentnum,jdbcType=VARCHAR},
      </if>
      <if test="gremark != null">
        #{gremark,jdbcType=VARCHAR},
      </if>
      <if test="gbegintime != null">
        #{gbegintime,jdbcType=TIMESTAMP},
      </if>
      <if test="gendtime != null">
        #{gendtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="fuermolv.book.entity.GradeExample" resultType="java.lang.Long">
    select count(*) from grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update grade
    <set>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.ggrade != null">
        gGrade = #{record.ggrade,jdbcType=VARCHAR},
      </if>
      <if test="record.pgrade != null">
        pGrade = #{record.pgrade,jdbcType=VARCHAR},
      </if>
      <if test="record.fgrade != null">
        fGrade = #{record.fgrade,jdbcType=VARCHAR},
      </if>
      <if test="record.grate != null">
        gRate = #{record.grate,jdbcType=VARCHAR},
      </if>
      <if test="record.gtype != null">
        gType = #{record.gtype,jdbcType=VARCHAR},
      </if>
      <if test="record.gclass != null">
        gClass = #{record.gclass,jdbcType=VARCHAR},
      </if>
      <if test="record.gteacher != null">
        gTeacher = #{record.gteacher,jdbcType=VARCHAR},
      </if>
      <if test="record.gstudentnum != null">
        gStudentNum = #{record.gstudentnum,jdbcType=VARCHAR},
      </if>
      <if test="record.gremark != null">
        gRemark = #{record.gremark,jdbcType=VARCHAR},
      </if>
      <if test="record.gbegintime != null">
        gBeginTime = #{record.gbegintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gendtime != null">
        gEndTime = #{record.gendtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update grade
    set gid = #{record.gid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=INTEGER},
      gGrade = #{record.ggrade,jdbcType=VARCHAR},
      pGrade = #{record.pgrade,jdbcType=VARCHAR},
      fGrade = #{record.fgrade,jdbcType=VARCHAR},
      gRate = #{record.grate,jdbcType=VARCHAR},
      gType = #{record.gtype,jdbcType=VARCHAR},
      gClass = #{record.gclass,jdbcType=VARCHAR},
      gTeacher = #{record.gteacher,jdbcType=VARCHAR},
      gStudentNum = #{record.gstudentnum,jdbcType=VARCHAR},
      gRemark = #{record.gremark,jdbcType=VARCHAR},
      gBeginTime = #{record.gbegintime,jdbcType=TIMESTAMP},
      gEndTime = #{record.gendtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="fuermolv.book.entity.Grade">
    update grade
    <set>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="ggrade != null">
        gGrade = #{ggrade,jdbcType=VARCHAR},
      </if>
      <if test="pgrade != null">
        pGrade = #{pgrade,jdbcType=VARCHAR},
      </if>
      <if test="fgrade != null">
        fGrade = #{fgrade,jdbcType=VARCHAR},
      </if>
      <if test="grate != null">
        gRate = #{grate,jdbcType=VARCHAR},
      </if>
      <if test="gtype != null">
        gType = #{gtype,jdbcType=VARCHAR},
      </if>
      <if test="gclass != null">
        gClass = #{gclass,jdbcType=VARCHAR},
      </if>
      <if test="gteacher != null">
        gTeacher = #{gteacher,jdbcType=VARCHAR},
      </if>
      <if test="gstudentnum != null">
        gStudentNum = #{gstudentnum,jdbcType=VARCHAR},
      </if>
      <if test="gremark != null">
        gRemark = #{gremark,jdbcType=VARCHAR},
      </if>
      <if test="gbegintime != null">
        gBeginTime = #{gbegintime,jdbcType=TIMESTAMP},
      </if>
      <if test="gendtime != null">
        gEndTime = #{gendtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where gid = #{gid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="fuermolv.book.entity.Grade">
    update grade
    set cid = #{cid,jdbcType=INTEGER},
      sid = #{sid,jdbcType=INTEGER},
      gGrade = #{ggrade,jdbcType=VARCHAR},
      pGrade = #{pgrade,jdbcType=VARCHAR},
      fGrade = #{fgrade,jdbcType=VARCHAR},
      gRate = #{grate,jdbcType=VARCHAR},
      gType = #{gtype,jdbcType=VARCHAR},
      gClass = #{gclass,jdbcType=VARCHAR},
      gTeacher = #{gteacher,jdbcType=VARCHAR},
      gStudentNum = #{gstudentnum,jdbcType=VARCHAR},
      gRemark = #{gremark,jdbcType=VARCHAR},
      gBeginTime = #{gbegintime,jdbcType=TIMESTAMP},
      gEndTime = #{gendtime,jdbcType=TIMESTAMP}
    where gid = #{gid,jdbcType=INTEGER}
  </update>
</mapper>